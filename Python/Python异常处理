try...except...finally...

try语句按照如下方式工作；
    首先，执行try子句（在关键字try和关键字except之间的语句）;
    如果没有异常发生，忽略except子句，try子句执行后结束;
    如果在执行try子句的过程中发生了异常，那么try子句余下的部分将被忽略：
        如果异常的类型和except之后的名称相符，那么对应的except子句将被执行，最后执行try语句之后的代码；
        如果一个异常没有与任何的except匹配，那么这个异常将会传递给上层的try中；
    try...except...语句有一个可选的else子句，else子句必须放在所有的except子句之后，这个子句将在try子句没有发生任何异常的时候执行。
    try...except...语句还有另外一个可选的finally子句，它定义了无论在任何情况下都会执行的清理行为。不管try子句里面有没有发生异常，finally子句都会执行。
    如果try子句里（或者在except和else子句里）出现一个异常，而又没有任何的except把它截住，那么这个异常会在finally子句执行后被抛出。
注：一个try语句可能包含多个except子句，分别来处理不同的特定的异常，但最多只有一个分支会被执行；
    最后一个except子句可以省略异常的名称，它将被当作通配符使用，例如：
        try:
            pass
        except TypeError:
            pass
        except:
            pass
    一个except子句可以同时处理多个异常，这些异常将被放在一个括号里成为一个元组，例如:
        except (RuntimeError, TypeError, NameError):
            pass
    可使用except语句的except Exception as err形式，将try子句返回的Exception对象保存在名为err的变量中，例如：
         try:
            a = 9 / 0
        except Exception as err:
            print('An exception happened: ' + str(err)) 

