sqlStr = "sql statement"
from django.db import connection
cursor = connection.cursor()
cursor.execute(sqlStr)
rows = cursor.fetchall()

查询结果rows是一个元组。





Django项目关联mysql失败，提示Server returns invalid timezone. Go to 'Advanced' tab and set 'serverTimezon'

时区错误，MySQL默认的时区是UTC时区，比北京时间晚8个小时，所以要修改mysql的时长。

在mysql的命令模式下，输入：

set global time_zone='+8:00';

再次连接成功。





mysql错误提示： django.db.utils.InternalError: (1366, "Incorrect string value"...)解决方案
问题：
在Django项目中使用 migrate 同步数据库操作时，出现1366类型 InternalError
出错原因：
由于表记录中有汉字，而创建库或者创建表的时候没有设置中文字符集charset=utf8
解决方案：
方案一、更改库的默认字符集
创建库的时候指定默认字符集：
create database 库名 default charset=utf8;
或者修改现有库的字符集：
alter database 库名 character set utf8;
方案二、更改表的默认字符集
创建表的时候指定默认字符集
create table 表名 (...) default charset=utf8;
或者修改现有表的字符集
alter table 表名 character set utf8；
方案三、修改配置文件（新创建的库和表会自动设置中文字符集）
修改配置文件详细步骤： （注意：为了防止把配置文件改错，修改之前先将其备份）
# 获取用户权限：
sudo -i
# 进入到mysql配置文件所在路径：
cd /etc/mysql/mysql.conf.d/
# 备份（-p选项会把原文件的权限也一起复制）
cp -p mysql.cnf mysql.cnf.bak #用vi打开配置文件mysqld.cnf并进行修改
1.输入vi mysqld.cnf
2.找到 [mysqld]，在 tmpdir =/tmp 后面按o键换行插入 character_set_server=utf8；
3.按esc键 退出插入模式，按shift + : 进入命令行，输入wq保存并退出
4.输入 /etc/init.d/mysql restart 重启mysql服务
5.输入exit 退出超级用户模式




今天我在Django 链接 Mysql 数据库 的时候出现了一个错误：

Django.db.utils.OperationalError: (1045, "Access denied for user 'root'@'localhost' (using password: NO)")

运行环境: Django版本1.11.11 ; Mysql 版本 8.0.11;

这个错误看网上的说法基本都是由于 数据库的 用户名 和 密码 不正确导致的。
通过启动 mysql 服务, 发现 用户名和密码都正确并且可以使用。

由于Mysql 8.0 的部分语法，密码的加密方式发生了改变，在8.0 中的用户密码采用的是cha2 加密方法。

有可能 是 Django 对这种加密的密码进行编译导致密码设置密码错误。

在Mysql 8.0 中，利用上述语句可以更新用户的加密方式为过去版本的方式。执行命令如下：

mysql -u root -p

use mysql；

ALTER USER 'root'@'127.0.0.1' IDENTIFIED WITH mysql_native_password BY 'newpassword';

FLUSH PRIVILEGES;

修改密码以后，重新执行

python manage.py makemigrations

python manage.py migrate

问题解决！

作者：nobody233
链接：https://www.jianshu.com/p/e232d5a279d2
来源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。




IndicatorGroup.objects.filter(Q(status=BaseModel.STATUS_SHTG), Q(branchFactory_id__in=ig_branchFactory_idList)).update(
                        status=BaseModel.STATUS_DEL, updateUser_id=SessionUser.getSessionUser().id
                    )