numpy.amin(a[, axis, ...])
    用于计算数组中的元素沿指定轴的最小值
numpy.amax(a[, axis, ...])
    用于计算数组中的元素沿指定轴的最大值
numpy.ptp(a[, axis, ...])
    用于计算数组中元素最大值与最小值的差（最大值 - 最小值）
numpy.median(a[, axis, ...])
    用于计算数组中元素的中位数（中值）
numpy.mean(a[, axis, ...])
    函数返回数组中元素的算术平均值。算术平均值是沿轴的元素的总和除以元素的数量
numpy.average(a[, axis, weights, returned])
    函数根据在另一个数组中给出的各自的权重计算数组中元素的加权平均值。加权平均值即将各数值乘以相应的权数，然后加总求和得到总体值，再除以总的单位数。
    -weights: 权重，不指定权重时相当于 mean 函数
    -returned: 如果 returned 参数设为 true，则返回权重的和
numpy.var(a[, axis, dtype, out, ddof, keepdims])
    函数返回数组中元素的方差。统计中的方差（样本方差）是每个样本值与全体样本值的平均数之差的平方值的平均数，即 var = mean((x - x.mean())** 2)
numpy.std(a[, axis, dtype, out, ddof, keepdims])
    函数返回数组中元素的标准差。标准差是一组数据平均值分散程度的一种度量。标准差是方差的算术平方根。即 std = sqrt(mean((x - x.mean())**2))

注：(1) axis 是轴参数，沿着它计算的轴，如果没有指定轴，则数组会被展开。轴0代表纵轴，轴1代表横轴。
(2) numpy 求方差和标准差的时候默认是有偏的（即除以n），求无偏样本方差标准差方式为加入参数 ddof=1；
而 pandas 默认是无偏的（除以n-1），如果想和 numpy 一样有偏，需要加上参数 ddof=0。


实例：
import numpy as np 


a = np.array([
    [3,7,5],
    [8,4,3],
    [2,4,9]
])

np.amin(a)  # 2
np.amin(a, 0)  # [2, 4, 3]
np.amin(a, 1)  # [3, 3, 2]

np.amax(a)  # 9
np.amax(a, axis=0)  # [8, 7, 9]
np.amax(a, axis=1)  # [7, 8, 9]

np.ptp(a)  # 7
np.ptp(a, 0)  # [6, 3, 6]
np.ptp(a, 1)  # [4, 5, 7]

np.median(a)  # 4.0
np.median(a, 0)  # [3., 4., 5.]
np.median(a, 1)  # [5., 4., 4.]

np.mean(a)  # 5.0
np.mean(a, 0)  # [4.33333333, 5.        , 5.66666667]
np.mean(a, 1)  # [5., 5., 5.]

np.var(a)  # 5.333333333333333
np.var(a, 0)  # [6.88888889, 2.        , 6.22222222]
np.var(a, 1)  # [2.66666667, 4.66666667, 8.66666667]

np.std(a)  # 2.309401076758503
np.std(a, 0)  # [2.62466929, 1.41421356, 2.49443826]
np.std(a, 1)  # [1.63299316, 2.1602469 , 2.94392029]

np.var(a, ddof=1)  # 6.0
np.std(a, ddof=1)  # 2.449489742783178

arr = np.array([1,2,3,4])
wts = np.array([4,3,2,1])

np.average(arr)  # 2.5
np.average(arr, weights=wts)  # 2.0
np.average(arr, weights=wts, returned=True)  # (2.0, 10.0)
